public void testMinStep_failAssert0() throws DerivativeException, IntegratorException {
        try {
            {
                TestProblem1 pb = new TestProblem1();
                double minStep = 0.1 * (pb.getFinalTime() - pb.getInitialTime());
                double maxStep = pb.getFinalTime() - pb.getInitialTime();
                double scalAbsoluteTolerance = 1.0E-15;
                double scalRelativeTolerance = 1.0E-15;
                FirstOrderIntegrator integ = new DormandPrince853Integrator(minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);
                TestProblemHandler handler = new TestProblemHandler(pb);
                integ.setStepHandler(handler);
                integ.integrate(pb, pb.getInitialTime(), pb.getInitialState(), pb.getFinalTime(), new double[pb.getDimension()]);
            }
            TestCase.fail("testMinStep should have thrown IntegratorException");
        } catch (IntegratorException expected) {
            TestCase.assertEquals("minimal step size (0.4) reached, integration needs 0.0832949049368991", expected.getMessage());
        }
    }